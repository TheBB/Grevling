name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create:
    tags:
  workflow_dispatch:

jobs:

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os: [ubuntu-latest, windows-latest, macos-13]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          make install
      - name: Install package
        run: poetry run pip install .
      - name: Test
        run: make test

  build_wheels:
    name: Build wheels
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Build wheels
        run: make wheel
      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*.whl

  build_sdist:
    name: Build sdist
    needs: [test]
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
      - name: Build sdist
        run: make sdist
      - uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.tar.gz

  deploy:
    name: Deploy
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.pypi_pwd }}
